
#Область ОбработчикиСобытийФормы

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураЗаписи = Новый Структура("Объект, Свойство, Значение", Партнер, "ДатаПоследнегоОбмена", ТекущаяДатаСеанса());
	
	РегистрыСведений.ДополнительныеРеквизиты_3PL.ДобавитьЗапись(СтруктураЗаписи);
	
КонецПроцедуры

Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = 1 Тогда
		
		НастройкиОбмена.Отбор.Объект.Установить(Партнер);
		
		СписокДоступныхСвойств = Новый СписокЗначений;
		СписокДоступныхСвойств.Добавить("ГруппаНоменклатуры");
		СписокДоступныхСвойств.Добавить("Склад");
		СписокДоступныхСвойств.Добавить("Контракт");
		СписокДоступныхСвойств.Добавить("ДатаПоследнегоОбмена");
		СписокДоступныхСвойств.Добавить("ДатаПоследнегоОбменаПоДокументам");
		СписокДоступныхСвойств.Добавить("ДатаПоследнегоОбменаПоМатериалам");
		СписокДоступныхСвойств.Добавить("ДатаПоследнегоОбменаПоПартиям");
		СписокДоступныхСвойств.Добавить("КаталогХраненияПечатныхФорм");
		СписокДоступныхСвойств.Добавить("ОсновнаяОрганизация");
		СписокДоступныхСвойств.Добавить("ОсновноеПодразделение");
		СписокДоступныхСвойств.Добавить("ОсновнойВидПоставки");
		СписокДоступныхСвойств.Добавить("ОсновнойДоговорПриемаНаХранение");
		СписокДоступныхСвойств.Добавить("ОсновнойПоставщик");
		СписокДоступныхСвойств.Добавить("ОсновнойТипЦенКонтрагента");
		
		НастройкиОбмена.Отбор.Свойство.ВидСравнения = ВидСравнения.ВСписке;
		НастройкиОбмена.Отбор.Свойство.Значение = СписокДоступныхСвойств;
		НастройкиОбмена.Отбор.Свойство.Использование = Истина;
			
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьСписокПартнеров()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеРеквизиты_3PL.Объект
	|ИЗ
	|	РегистрСведений.ДополнительныеРеквизиты_3PL КАК ДополнительныеРеквизиты_3PL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Объект) Тогда
			Продолжить;
		КонецЕсли; 
		
		СписокПартнеров.Добавить(Выборка.Объект);
		
	КонецЦикла;
	
КонецПроцедуры
 
Процедура ПартнерНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
    ВыбЭлемент = СписокПартнеров.ВыбратьЭлемент("Выберите партнера по ответ. хранению");
	
	Партнер = ВыбЭлемент.Значение;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьСписокПартнеров();
	
	НачалоПериода = ТекущаяДатаСеанса();
	КонецПериода = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура КонецПериодаПриИзменении(Элемент)
	
	ОбновитьТаблицуРабочегоМестаОператора();
	
КонецПроцедуры

Процедура НачалоПериодаПриИзменении(Элемент)
	
	ОбновитьТаблицуРабочегоМестаОператора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

Процедура КоманднаяПанельЗаказыПоставщикуОбновитьТаблицуЗаказовПоставщику(Кнопка)
	
	ОбновитьТаблицуРабочегоМестаОператора();
	
КонецПроцедуры

Процедура КоманднаяПанельКоманднаяПанельОТУОбновитьТаблицуОТУ(Кнопка)
	
	ОбновитьТаблицуРабочегоМестаОператора();
	
КонецПроцедуры

Процедура КоманднаяПанельМаршрутыОбновитьТаблицуМаршрутов(Кнопка)
	
	ОбновитьТаблицуРабочегоМестаОператора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

Процедура КнопкаПолучитьНоменклатуруНажатие(Элемент)
	
	ОчиститьСообщения();
	ПолучитьНоменклатуру();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаПолучитьПартииНажатие(Элемент)
	
	ОчиститьСообщения();
	ПолучитьПартии();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаПолучитьДокументыНажатие(Элемент)
	
	ОчиститьСообщения();
	ПолучитьДокументы();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаПолучитьТранспортировкиНажатие(Элемент)
	
	ОчиститьСообщения();
	ПолучитьТранспортировки();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаПодтвердитьПоставкиНажатие(Элемент)
	ОчиститьСообщения();
	ПодтвердитьПоставки();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
КонецПроцедуры

Процедура КнопкаОтправитьОстаткиНажатие(Элемент)
	
	ОчиститьСообщения();
	ОтправитьТекущиеОстатки();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаОтправитьКорректировкиОстатковНажатие(Элемент)
	
	ОчиститьСообщения();
	ОтправитьКорректировкиОстатков();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаОбновитьПоставкиНажатие(Элемент)
	
	ОчиститьСообщения();
	ОбновитьПоставки();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаВыгрузитьМаршрутыНажатие(Элемент)
	
	ОчиститьСообщения();
	ВыгрузитьМаршрутыЭкспедиторов();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

Процедура КнопкаПолучитьПечатныеФормыНажатие(Элемент)
	
	ОчиститьСообщения();
	ПолучитьПечатныеФормы();
	Сообщить("Операция завершена", СтатусСообщения.Информация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаПоЗаказамПоставщику()
	
	Возврат "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПоставщику.Ссылка КАК ДокументСсылка,
	|	ЗаказПоставщику.ДатаПоступления КАК ДатаПоставки,
	|	ЕСТЬNULL(СвойстваОбъектов.Значение, """") КАК НомерПоклажедателя,
	|	ЖурналЗаявок.Статус,
	|	ЗаказПоставщику.Вес КАК ОбщийВес,
	|	ЗаказПоставщику.Объем КАК ОбщийОбъем,
	|	ВЫРАЗИТЬ(ЗаказПоставщику.Комментарий КАК СТРОКА(500)) КАК Комментарий
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Состав
	|		ПО ЗаказПоставщику.Ссылка = Состав.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК СвойстваОбъектов
	|		ПО ЗаказПоставщику.Ссылка = СвойстваОбъектов.Объект
	|			И (СвойстваОбъектов.Свойство = &Свойство_НомерВходящегоДокумента)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций КАК ЖурналЗаявок
	|		ПО ЗаказПоставщику.Ссылка = ЖурналЗаявок.Объект
	|			И (ЖурналЗаявок.Источник = &Партнер)
	|			И (ЖурналЗаявок.Идентификатор = ""Входящая"")
	|ГДЕ
	|	ЗаказПоставщику.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|{ГДЕ
	|	ЗаказПоставщику.ДоговорКонтрагента.* КАК ОсновнойДоговорПриемаНаХранение,
	|	ЗаказПоставщику.Склад.*,
	|	Состав.Номенклатура.* КАК ГруппаНоменклатуры}
	|{УПОРЯДОЧИТЬ ПО
	|	ЗаказПоставщику.Дата}";
	
КонецФункции

Функция ПолучитьТекстЗапросаПоОтгрузкаТоваровУслуг()
	
	Возврат "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЖурналЗаявок.Статус,
	|	СостояниеДокументов.Состояние,
	|	ОтгрузкаТоваровУслуг.Ссылка КАК ДокументСсылка,
	|	ОтгрузкаТоваровУслуг.ДатаОтгрузки КАК ДатаПоставки,
	|	ОтгрузкаТоваровУслуг.Контрагент,
	|	ОтгрузкаТоваровУслуг.СтруктурнаяЕдиницаКонтрагента,
	|	ОтгрузкаТоваровУслуг.ГруппаДоставки,
	|	ОтгрузкаТоваровУслуг.СпособРасчетов,
	|	ЕСТЬNULL(СвойстваОбъектов.Значение, """") КАК НомерПоклажедателя,
	|	ЕСТЬNULL(СвойстваОбъектов2.Значение, """") КАК НомерТранспортировки,
	|	СУММА(Состав.Количество * Состав.ЕдиницаИзмерения.ВесБрутто) КАК ОбщийВес,
	|	СУММА(Состав.Количество * Состав.ЕдиницаИзмерения.ОбъемБрутто) КАК ОбщийОбъем,
	|	ВЫРАЗИТЬ(ОтгрузкаТоваровУслуг.Комментарий КАК СТРОКА(500)) КАК Комментарий
	|ИЗ
	|	Документ.ОтгрузкаТоваровУслуг КАК ОтгрузкаТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровУслуг.Товары КАК Состав
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = Состав.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций КАК ЖурналЗаявок
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = ЖурналЗаявок.Объект
	|			И (ЖурналЗаявок.Источник = &Партнер)
	|			И (ЖурналЗаявок.Идентификатор = ""Исходящая"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеДокументовОтгрузки.СрезПоследних КАК СостояниеДокументов
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = СостояниеДокументов.ДокументОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК СвойстваОбъектов
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = СвойстваОбъектов.Объект
	|			И (СвойстваОбъектов.Свойство = &Свойство_НомерВходящегоДокумента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК СвойстваОбъектов2
	|		ПО (ОтгрузкаТоваровУслуг.Ссылка = СвойстваОбъектов2.Объект)
	|			И (СвойстваОбъектов2.Свойство = &Свойство_НомерПоДаннымПоставщика)
	|ГДЕ
	|	ОтгрузкаТоваровУслуг.ДатаОтгрузки МЕЖДУ &НачалоПериода И &КонецПериода
	|{ГДЕ
	|	ОтгрузкаТоваровУслуг.Склад.*,
	|	Состав.ДоговорВладельца.* КАК ОсновнойДоговорПриемаНаХранение,
	|	Состав.Номенклатура.* КАК ГруппаНоменклатуры}
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгрузкаТоваровУслуг.Ссылка,
	|	СостояниеДокументов.Состояние,
	|	ОтгрузкаТоваровУслуг.ДатаОтгрузки,
	|	ЕСТЬNULL(СвойстваОбъектов.Значение, """"),
	|	ЕСТЬNULL(СвойстваОбъектов2.Значение, """"),
	|	ЖурналЗаявок.Статус,
	|	ВЫРАЗИТЬ(ОтгрузкаТоваровУслуг.Комментарий КАК СТРОКА(500)),
	|	ОтгрузкаТоваровУслуг.Контрагент,
	|	ОтгрузкаТоваровУслуг.СтруктурнаяЕдиницаКонтрагента,
	|	ОтгрузкаТоваровУслуг.ГруппаДоставки,
	|	ОтгрузкаТоваровУслуг.СпособРасчетов
	|{УПОРЯДОЧИТЬ ПО
	|	ОтгрузкаТоваровУслуг.Дата}";
	
КонецФункции

Функция ПолучитьТекстЗапросаПоЭкспедиции()
	
	Возврат "ВЫБРАТЬ
	|	ЖурналЗаявокПоМаршрутам.Статус,
	|	МаршрутЭкспедитора.Ссылка КАК ДокументСсылка,
	|	МаршрутЭкспедитора.ДатаЭкспедиции,
	|	МаршрутЭкспедитора.Транспорт,
	|	ВЫБОР
	|		КОГДА НЕ МаршрутЭкспедитора.Водитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА МаршрутЭкспедитора.Водитель
	|		ИНАЧЕ МаршрутЭкспедитора.Экспедитор
	|	КОНЕЦ КАК Водитель,
	|	ЕСТЬNULL(СвойстваОбъектов.Значение, """") КАК НомерТранспортировки,
	|	МаршрутЭкспедитора.ГруппаДоставки,
	|	ВЫРАЗИТЬ(МаршрутЭкспедитора.Комментарий КАК СТРОКА(500)) КАК Комментарий
	|ИЗ
	|	Документ.ОтгрузкаТоваровУслуг КАК ОтгрузкаТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровУслуг.Товары КАК Состав
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = Состав.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций КАК ЖурналЗаявок
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = ЖурналЗаявок.Объект
	|			И (ЖурналЗаявок.Источник = &Партнер)
	|			И (ЖурналЗаявок.Идентификатор = ""Исходящая"")
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутЭкспедитора.ДокументыОснования КАК тчДокументыОснования
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = тчДокументыОснования.ДокументОснование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутЭкспедитора КАК МаршрутЭкспедитора
	|		ПО (тчДокументыОснования.Ссылка = МаршрутЭкспедитора.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК СвойстваОбъектов
	|		ПО ОтгрузкаТоваровУслуг.Ссылка = СвойстваОбъектов.Объект
	|			И (СвойстваОбъектов.Свойство = &Свойство_НомерПоДаннымПоставщика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций КАК ЖурналЗаявокПоМаршрутам
	|		ПО (тчДокументыОснования.Ссылка = ЖурналЗаявокПоМаршрутам.Объект)
	|			И (ЖурналЗаявокПоМаршрутам.Приемник = &Партнер)
	|ГДЕ
	|	ОтгрузкаТоваровУслуг.ДатаОтгрузки МЕЖДУ &НачалоПериода И &КонецПериода
	|{ГДЕ
	|	ОтгрузкаТоваровУслуг.Склад.*,
	|	Состав.ДоговорВладельца.* КАК ОсновнойДоговорПриемаНаХранение,
	|	Состав.Номенклатура.* КАК ГруппаНоменклатуры}
	|
	|СГРУППИРОВАТЬ ПО
	|	ЖурналЗаявокПоМаршрутам.Статус,
	|	МаршрутЭкспедитора.Ссылка,
	|	ЕСТЬNULL(СвойстваОбъектов.Значение, """"),
	|	МаршрутЭкспедитора.ДатаЭкспедиции,
	|	МаршрутЭкспедитора.Транспорт,
	|	ВЫБОР
	|		КОГДА НЕ МаршрутЭкспедитора.Водитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА МаршрутЭкспедитора.Водитель
	|		ИНАЧЕ МаршрутЭкспедитора.Экспедитор
	|	КОНЕЦ,
	|	МаршрутЭкспедитора.ГруппаДоставки,
	|	ВЫРАЗИТЬ(МаршрутЭкспедитора.Комментарий КАК СТРОКА(500))
	|{УПОРЯДОЧИТЬ ПО
	|	МаршрутЭкспедитора.Дата}";
	
КонецФункции
 
Функция ПолучитьТекстЗапросаДляПостроителя(ИмяТаблицы)
	
	Если ИмяТаблицы = "ЗаказыПоставщику" Тогда
		
		ТекстЗапроса = ПолучитьТекстЗапросаПоЗаказамПоставщику();
		
	ИначеЕсли ИмяТаблицы = "ОтгрузкиТоваровУслуг" Тогда 
		
		ТекстЗапроса = ПолучитьТекстЗапросаПоОтгрузкаТоваровУслуг();
		
	ИначеЕсли ИмяТаблицы = "МаршрутыЭкспедиторов" Тогда 
		
		ТекстЗапроса = ПолучитьТекстЗапросаПоЭкспедиции();
		
	КонецЕсли; 
	
	Возврат ТекстЗапроса
	
КонецФункции
 
Процедура ЗаполнитьНастройкиПостроителя(ИмяТаблицы)
	
	СвойстваПартнера = РегистрыСведений.ДополнительныеРеквизиты_3PL.ПолучитьСвойстваОбъекта(Партнер);
	
	ПостроительОтчета.Текст = ПолучитьТекстЗапросаДляПостроителя(ИмяТаблицы);
	ПостроительОтчета.Параметры.Вставить("Партнер",                          Строка(Партнер));
	ПостроительОтчета.Параметры.Вставить("НачалоПериода",                    НачалоПериода);
	ПостроительОтчета.Параметры.Вставить("КонецПериода",                     КонецДня(КонецПериода));
	ПостроительОтчета.Параметры.Вставить("Свойство_НомерВходящегоДокумента", СвойстваПартнера.Свойство_НомерВходящегоДокумента);
	ПостроительОтчета.Параметры.Вставить("Свойство_НомерПоДаннымПоставщика", СвойстваПартнера.Свойство_НомерТранспортировки);
	
	ПостроительОтчета.ЗаполнитьНастройки();
	
	Если ПостроительОтчета.Отбор.Количество() = 0 Тогда
		ПостроительОтчета.Отбор.Добавить("ОсновнойДоговорПриемаНаХранение");
		ПостроительОтчета.Отбор.Добавить("Склад");
		ПостроительОтчета.Отбор.Добавить("ГруппаНоменклатуры");
	КонецЕсли; 
	
	Для каждого Элемент Из ПостроительОтчета.Отбор Цикл
		
		Элемент.Значение = СвойстваПартнера[Элемент.Имя];
		Элемент.Использование = Истина;
		
		Если Элемент.Имя = "ГруппаНоменклатуры" Тогда
			Элемент.ВидСравнения = ВидСравнения.ВИерархии;
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбновитьТаблицуРабочегоМестаОператора()
	
	Если НачалоПериода = Дата(1,1,1)
		ИЛИ КонецПериода = Дата(1,1,1) Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	ИмяТекТаблицы = ЭлементыФормы.ПанельОбъектовОбмена.ТекущаяСтраница.Имя;
	
	ЗаполнитьНастройкиПостроителя(ИмяТекТаблицы);
	
	ПостроительОтчета.Выполнить();
	
	ЭтотОбъект[ИмяТекТаблицы].Загрузить(ПостроительОтчета.Результат.Выгрузить());
	
КонецПроцедуры

Процедура ПанельОбъектовОбменаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьТаблицуРабочегоМестаОператора();
	
КонецПроцедуры

#КонецОбласти
